import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main15686 {
    private static List<Point> home;
    private static List<Point> place;
    private static int answer;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        answer = Integer.MAX_VALUE;
        home = new ArrayList<>();
        place = new ArrayList<>();
        int n = sc.nextInt();
        int r = sc.nextInt();

        for(int i = 0;i < n;i++){
            for(int j = 0;j < n;j++){
                int num = sc.nextInt();
                if(num == 1)
                    home.add(new Point(i + 1,j + 1));
                else if(num == 2)
                    place.add(new Point(i + 1, j + 1));
            }
        }
        boolean[] visited = new boolean[place.size()];
        permutation(visited, 0, home.size(), r, r);
        System.out.println(answer);
    }

    private static void permutation(boolean[] visited, int start, int n, int r, int num){
        if(r == 0){
            List<List<Integer>> listOfPoint = new ArrayList<>();
            int sum = 0;
            for(int i = 0;i < place.size();i++){
                if(!visited[i])
                    continue;
                listOfPoint.add(new ArrayList<>());
                for(int j = 0;j < n;j++){
                    listOfPoint.get(listOfPoint.size() - 1).add(Math.abs(home.get(j).x - place.get(i).x) + Math.abs(home.get(j).y - place.get(i).y));
                }
            }
            for(int i = 0;i < n;i++){
                int min = Integer.MAX_VALUE;
                for(int j = 0;j < num;j++){
                    if(min > listOfPoint.get(j).get(i))
                        min = listOfPoint.get(j).get(i);
                }
                sum += min;
            }
            if(answer > sum)
                answer = sum;
            return;
        }
        for(int i = start;i < visited.length;i++){
            visited[i] = true;
            permutation(visited, i + 1, n, r - 1, num);
            visited[i] = false;
        }
    }

    static class Point{
        int x;
        int y;
        public Point(int x, int y){
            this.x = x;
            this.y = y;
        }
    }
}
